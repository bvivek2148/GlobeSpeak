{"version":3,"file":"Dashboard-CaBt3Okd.js","sources":["../../node_modules/lucide-react/dist/esm/icons/alert-circle.js","../../node_modules/lucide-react/dist/esm/icons/bar-chart-3.js","../../node_modules/lucide-react/dist/esm/icons/calendar-days.js","../../node_modules/lucide-react/dist/esm/icons/chevron-right.js","../../node_modules/lucide-react/dist/esm/icons/trophy.js","../../node_modules/lucide-react/dist/esm/icons/user-check.js","../../node_modules/lucide-react/dist/esm/icons/x-circle.js","../../src/pages/Dashboard.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst AlertCircle = createLucideIcon(\"AlertCircle\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"8\", y2: \"12\", key: \"1pkeuh\" }],\n  [\"line\", { x1: \"12\", x2: \"12.01\", y1: \"16\", y2: \"16\", key: \"4dfq90\" }]\n]);\n\nexport { AlertCircle as default };\n//# sourceMappingURL=alert-circle.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst BarChart3 = createLucideIcon(\"BarChart3\", [\n  [\"path\", { d: \"M3 3v18h18\", key: \"1s2lah\" }],\n  [\"path\", { d: \"M18 17V9\", key: \"2bz60n\" }],\n  [\"path\", { d: \"M13 17V5\", key: \"1frdt8\" }],\n  [\"path\", { d: \"M8 17v-3\", key: \"17ska0\" }]\n]);\n\nexport { BarChart3 as default };\n//# sourceMappingURL=bar-chart-3.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst CalendarDays = createLucideIcon(\"CalendarDays\", [\n  [\"rect\", { width: \"18\", height: \"18\", x: \"3\", y: \"4\", rx: \"2\", ry: \"2\", key: \"eu3xkr\" }],\n  [\"line\", { x1: \"16\", x2: \"16\", y1: \"2\", y2: \"6\", key: \"m3sa8f\" }],\n  [\"line\", { x1: \"8\", x2: \"8\", y1: \"2\", y2: \"6\", key: \"18kwsl\" }],\n  [\"line\", { x1: \"3\", x2: \"21\", y1: \"10\", y2: \"10\", key: \"xt86sb\" }],\n  [\"path\", { d: \"M8 14h.01\", key: \"6423bh\" }],\n  [\"path\", { d: \"M12 14h.01\", key: \"1etili\" }],\n  [\"path\", { d: \"M16 14h.01\", key: \"1gbofw\" }],\n  [\"path\", { d: \"M8 18h.01\", key: \"lrp35t\" }],\n  [\"path\", { d: \"M12 18h.01\", key: \"mhygvu\" }],\n  [\"path\", { d: \"M16 18h.01\", key: \"kzsmim\" }]\n]);\n\nexport { CalendarDays as default };\n//# sourceMappingURL=calendar-days.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst ChevronRight = createLucideIcon(\"ChevronRight\", [\n  [\"path\", { d: \"m9 18 6-6-6-6\", key: \"mthhwq\" }]\n]);\n\nexport { ChevronRight as default };\n//# sourceMappingURL=chevron-right.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Trophy = createLucideIcon(\"Trophy\", [\n  [\"path\", { d: \"M6 9H4.5a2.5 2.5 0 0 1 0-5H6\", key: \"17hqa7\" }],\n  [\"path\", { d: \"M18 9h1.5a2.5 2.5 0 0 0 0-5H18\", key: \"lmptdp\" }],\n  [\"path\", { d: \"M4 22h16\", key: \"57wxv0\" }],\n  [\"path\", { d: \"M10 14.66V17c0 .55-.47.98-.97 1.21C7.85 18.75 7 20.24 7 22\", key: \"1nw9bq\" }],\n  [\"path\", { d: \"M14 14.66V17c0 .55.47.98.97 1.21C16.15 18.75 17 20.24 17 22\", key: \"1np0yb\" }],\n  [\"path\", { d: \"M18 2H6v7a6 6 0 0 0 12 0V2Z\", key: \"u46fv3\" }]\n]);\n\nexport { Trophy as default };\n//# sourceMappingURL=trophy.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst UserCheck = createLucideIcon(\"UserCheck\", [\n  [\"path\", { d: \"M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2\", key: \"1yyitq\" }],\n  [\"circle\", { cx: \"9\", cy: \"7\", r: \"4\", key: \"nufk8\" }],\n  [\"polyline\", { points: \"16 11 18 13 22 9\", key: \"1pwet4\" }]\n]);\n\nexport { UserCheck as default };\n//# sourceMappingURL=user-check.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst XCircle = createLucideIcon(\"XCircle\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"m15 9-6 6\", key: \"1uzhvr\" }],\n  [\"path\", { d: \"m9 9 6 6\", key: \"z0biqf\" }]\n]);\n\nexport { XCircle as default };\n//# sourceMappingURL=x-circle.js.map\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\nimport { \n  MessageCircle, \n  Users, \n  Globe, \n  TrendingUp, \n  Calendar,\n  Clock,\n  Star,\n  Settings,\n  Award,\n  Target,\n  BookOpen,\n  Zap,\n  ChevronRight,\n  BarChart3,\n  CalendarDays,\n  Trophy,\n  Languages,\n  CheckCircle,\n  AlertCircle,\n  XCircle,\n  UserCheck,\n  Volume2,\n  Mic,\n  Play,\n  Pause\n} from 'lucide-react';\nimport { formatDate, formatRelativeTime, formatNumber } from '../i18n';\n\n// Mock data for charts\nconst weeklyActivityData = [\n  { day: 'Mon', messages: 42, translations: 38 },\n  { day: 'Tue', messages: 56, translations: 52 },\n  { day: 'Wed', messages: 38, translations: 35 },\n  { day: 'Thu', messages: 64, translations: 59 },\n  { day: 'Fri', messages: 72, translations: 68 },\n  { day: 'Sat', messages: 48, translations: 45 },\n  { day: 'Sun', messages: 32, translations: 30 }\n];\n\nconst languageDistributionData = [\n  { language: 'Spanish', percentage: 35, users: 12400 },\n  { language: 'French', percentage: 25, users: 8900 },\n  { language: 'German', percentage: 15, users: 5300 },\n  { language: 'Italian', percentage: 12, users: 4200 },\n  { language: 'Other', percentage: 13, users: 4600 }\n];\n\nexport const Dashboard: React.FC = () => {\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const [selectedPeriod, setSelectedPeriod] = useState('week');\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [audioProgress, setAudioProgress] = useState(0);\n  // Add new state for translation feature\n  const [inputText, setInputText] = useState('Hello, how are you today?');\n  const [targetLanguage, setTargetLanguage] = useState('es');\n  const [translatedText, setTranslatedText] = useState('Hola, ¿cómo estás hoy?');\n  const [isTranslating, setIsTranslating] = useState(false);\n\n  // Mock data - in a real app, this would come from an API\n  const userStats = {\n    messagesTranslated: 1247,\n    languagesUsed: 8,\n    conversationsStarted: 156,\n    friendsConnected: 42,\n    streak: 12,\n    accuracy: 94,\n    wordsLearned: 1240\n  };\n\n  const recentActivity = [\n    {\n      id: 1,\n      type: 'translation',\n      message: 'Translated message from Spanish to English',\n      timestamp: new Date(Date.now() - 1000 * 60 * 15), // 15 minutes ago\n      language: 'es',\n      status: 'success'\n    },\n    {\n      id: 2,\n      type: 'conversation',\n      message: 'Started conversation with Maria from Mexico',\n      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2), // 2 hours ago\n      language: 'es',\n      status: 'success'\n    },\n    {\n      id: 3,\n      type: 'friend',\n      message: 'Connected with Jean from France',\n      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 24), // 1 day ago\n      language: 'fr',\n      status: 'success'\n    },\n    {\n      id: 4,\n      type: 'achievement',\n      message: 'Earned \"Polyglot\" badge for using 5+ languages',\n      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 24 * 2), // 2 days ago\n      status: 'success'\n    },\n    {\n      id: 5,\n      type: 'practice',\n      message: 'Completed daily language practice',\n      timestamp: new Date(Date.now() - 1000 * 60 * 60 * 24 * 3), // 3 days ago\n      language: 'de',\n      status: 'success'\n    }\n  ];\n\n  const upcomingEvents = [\n    {\n      id: 1,\n      title: 'French Conversation Group',\n      date: new Date(Date.now() + 1000 * 60 * 60 * 24), // Tomorrow\n      participants: 12,\n      language: 'fr',\n      type: 'group'\n    },\n    {\n      id: 2,\n      title: 'Spanish Language Exchange',\n      date: new Date(Date.now() + 1000 * 60 * 60 * 24 * 3), // 3 days from now\n      participants: 8,\n      language: 'es',\n      type: 'exchange'\n    },\n    {\n      id: 3,\n      title: 'German Pronunciation Workshop',\n      date: new Date(Date.now() + 1000 * 60 * 60 * 24 * 5), // 5 days from now\n      participants: 15,\n      language: 'de',\n      type: 'workshop'\n    }\n  ];\n\n  const languageProgress = [\n    { language: 'Spanish', code: 'es', progress: 85, level: 'Advanced', nextMilestone: 'Fluent' },\n    { language: 'French', code: 'fr', progress: 60, level: 'Intermediate', nextMilestone: 'Advanced' },\n    { language: 'German', code: 'de', progress: 30, level: 'Beginner', nextMilestone: 'Intermediate' },\n    { language: 'Italian', code: 'it', progress: 15, level: 'Beginner', nextMilestone: 'Elementary' }\n  ];\n\n  const quickActions = [\n    { icon: <MessageCircle size={20} />, label: 'Start Conversation', action: () => {} },\n    { icon: <BookOpen size={20} />, label: 'Language Practice', action: () => {} },\n    { icon: <Users size={20} />, label: 'Find Friends', action: () => {} },\n    { icon: <Target size={20} />, label: 'Set Goals', action: () => {} },\n    { icon: <Mic size={20} />, label: 'Pronunciation', action: () => {} },\n    { icon: <Volume2 size={20} />, label: 'Listening Practice', action: () => {} }\n  ];\n\n  const performanceMetrics = [\n    { icon: <BarChart3 size={20} />, label: 'Translation Accuracy', value: '94%', change: '+2%', trend: 'up' },\n    { icon: <CalendarDays size={20} />, label: 'Daily Streak', value: '12 days', change: '+1', trend: 'up' },\n    { icon: <Trophy size={20} />, label: 'Achievements', value: '7/15', change: '+1', trend: 'up' },\n    { icon: <Languages size={20} />, label: 'Words Learned', value: '1,240', change: '+42', trend: 'up' },\n    { icon: <UserCheck size={20} />, label: 'Friends Connected', value: '42', change: '+3', trend: 'up' },\n    { icon: <Globe size={20} />, label: 'Languages Used', value: '8', change: '+1', trend: 'up' }\n  ];\n\n  const getActivityIcon = (type: string, status?: string) => {\n    const iconProps = { size: 16 };\n    \n    if (status === 'error') return <XCircle {...iconProps} />;\n    if (status === 'warning') return <AlertCircle {...iconProps} />;\n    \n    switch (type) {\n      case 'translation':\n        return <Globe {...iconProps} />;\n      case 'conversation':\n        return <MessageCircle {...iconProps} />;\n      case 'friend':\n        return <Users {...iconProps} />;\n      case 'achievement':\n        return <Star {...iconProps} />;\n      case 'practice':\n        return <BookOpen {...iconProps} />;\n      default:\n        return <Clock {...iconProps} />;\n    }\n  };\n\n  const getActivityStatusClass = (status?: string) => {\n    switch (status) {\n      case 'success':\n        return 'activity-success';\n      case 'error':\n        return 'activity-error';\n      case 'warning':\n        return 'activity-warning';\n      default:\n        return '';\n    }\n  };\n\n  const toggleAudioPlayback = () => {\n    if (isPlaying) {\n      // Stop playback\n      if ('speechSynthesis' in window) {\n        window.speechSynthesis.cancel();\n      }\n      setIsPlaying(false);\n      setAudioProgress(0);\n    } else {\n      // Start playback\n      if ('speechSynthesis' in window) {\n        // Cancel any ongoing speech\n        window.speechSynthesis.cancel();\n        \n        // Create a new speech utterance with translated text\n        const utterance = new SpeechSynthesisUtterance(translatedText);\n        \n        // Set utterance properties\n        utterance.rate = 1.0;\n        utterance.pitch = 1.0;\n        utterance.volume = 1.0;\n        \n        // Set language based on target language\n        const languageMap: Record<string, string> = {\n          'en': 'en-US',\n          'es': 'es-ES',\n          'fr': 'fr-FR',\n          'de': 'de-DE',\n          'it': 'it-IT',\n          'pt': 'pt-PT',\n          'ru': 'ru-RU',\n          'ja': 'ja-JP',\n          'ko': 'ko-KR',\n          'zh': 'zh-CN'\n        };\n        utterance.lang = languageMap[targetLanguage] || 'en-US';\n        \n        // Handle playback events\n        utterance.onstart = () => {\n          setIsPlaying(true);\n          setAudioProgress(0);\n        };\n        \n        utterance.onend = () => {\n          setIsPlaying(false);\n          setAudioProgress(100);\n        };\n        \n        utterance.onerror = () => {\n          setIsPlaying(false);\n          setAudioProgress(0);\n        };\n        \n        // Speak the utterance\n        window.speechSynthesis.speak(utterance);\n        \n        // Update progress manually\n        const interval = setInterval(() => {\n          setAudioProgress(prev => {\n            if (prev >= 100 || !isPlaying) {\n              clearInterval(interval);\n              return 100;\n            }\n            return Math.min(prev + 2, 100);\n          });\n        }, 100);\n      } else {\n        // Fallback for browsers that don't support speech synthesis\n        console.warn('Speech synthesis not supported');\n        setIsPlaying(true);\n        setAudioProgress(0);\n        \n        const interval = setInterval(() => {\n          setAudioProgress(prev => {\n            if (prev >= 100) {\n              clearInterval(interval);\n              setIsPlaying(false);\n              return 100;\n            }\n            return prev + 2;\n          });\n        }, 100);\n      }\n    }\n  };\n\n  // Add function to handle text translation\n  const handleTranslate = () => {\n    setIsTranslating(true);\n    // Simulate translation API call with more comprehensive translations\n    setTimeout(() => {\n      // In a real app, this would call a translation API\n      const translations: Record<string, Record<string, string>> = {\n        'Hello, how are you today?': {\n          es: 'Hola, ¿cómo estás hoy?',\n          fr: 'Bonjour, comment allez-vous aujourd\\'hui?',\n          de: 'Hallo, wie geht es dir heute?',\n          it: 'Ciao, come stai oggi?',\n          pt: 'Olá, como você está hoje?',\n          ru: 'Привет, как ты сегодня?',\n          ja: 'こんにちは、今日はどうですか？',\n          ko: '안녕하세요, 오늘 어떻게 지내세요?',\n          zh: '你好，今天怎么样？'\n        },\n        'Hello, how are you': {\n          es: 'Hola, ¿cómo estás?',\n          fr: 'Bonjour, comment allez-vous?',\n          de: 'Hallo, wie geht es dir?',\n          it: 'Ciao, come stai?',\n          pt: 'Olá, como você está?',\n          ru: 'Привет, как ты?',\n          ja: 'こんにちは、元気ですか？',\n          ko: '안녕하세요, 어떻게 지내세요?',\n          zh: '你好，你好吗？'\n        },\n        'Hello how are you': {\n          es: 'Hola, ¿cómo estás?',\n          fr: 'Bonjour, comment allez-vous?',\n          de: 'Hallo, wie geht es dir?',\n          it: 'Ciao, come stai?',\n          pt: 'Olá, como você está?',\n          ru: 'Привет, как ты?',\n          ja: 'こんにちは、元気ですか？',\n          ko: '안녕하세요, 어떻게 지내세요?',\n          zh: '你好，你好吗？'\n        },\n        'Hello how are': {\n          es: 'Hola, ¿cómo estás?',\n          fr: 'Bonjour, comment allez-vous?',\n          de: 'Hallo, wie geht es dir?',\n          it: 'Ciao, come stai?',\n          pt: 'Olá, como você está?',\n          ru: 'Привет, как ты?',\n          ja: 'こんにちは、元気ですか？',\n          ko: '안녕하세요, 어떻게 지내세요?',\n          zh: '你好，你好吗？'\n        },\n        'Hola, ¿cómo estás hoy?': {\n          en: 'Hello, how are you today?',\n          fr: 'Bonjour, comment allez-vous aujourd\\'hui?',\n          de: 'Hallo, wie geht es dir heute?',\n          it: 'Ciao, come stai oggi?',\n          pt: 'Olá, como você está hoje?',\n          ru: 'Привет, как ты сегодня?',\n          ja: 'こんにちは、今日はどうですか？',\n          ko: '안녕하세요, 오늘 어떻게 지내세요?',\n          zh: '你好，今天怎么样？'\n        },\n        'Bonjour, comment allez-vous aujourd\\'hui?': {\n          en: 'Hello, how are you today?',\n          es: 'Hola, ¿cómo estás hoy?',\n          de: 'Hallo, wie geht es dir heute?',\n          it: 'Ciao, come stai oggi?',\n          pt: 'Olá, como você está hoje?',\n          ru: 'Привет, как ты сегодня?',\n          ja: 'こんにちは、今日はどうですか？',\n          ko: '안녕하세요, 오늘 어떻게 지내세요?',\n          zh: '你好，今天怎么样？'\n        },\n        'Good morning': {\n          es: 'Buenos días',\n          fr: 'Bonjour',\n          de: 'Guten Morgen',\n          it: 'Buongiorno',\n          pt: 'Bom dia',\n          ru: 'Доброе утро',\n          ja: 'おはようございます',\n          ko: '좋은 아침',\n          zh: '早上好'\n        },\n        'Good evening': {\n          es: 'Buenas noches',\n          fr: 'Bonsoir',\n          de: 'Guten Abend',\n          it: 'Buonasera',\n          pt: 'Boa noite',\n          ru: 'Добрый вечер',\n          ja: 'こんばんは',\n          ko: '안녕하세요',\n          zh: '晚上好'\n        },\n        'Thank you': {\n          es: 'Gracias',\n          fr: 'Merci',\n          de: 'Danke',\n          it: 'Grazie',\n          pt: 'Obrigado',\n          ru: 'Спасибо',\n          ja: 'ありがとう',\n          ko: '감사합니다',\n          zh: '谢谢'\n        },\n        'Please': {\n          es: 'Por favor',\n          fr: 'S\\'il vous plaît',\n          de: 'Bitte',\n          it: 'Per favore',\n          pt: 'Por favor',\n          ru: 'Пожалуйста',\n          ja: 'お願いします',\n          ko: '제발',\n          zh: '请'\n        },\n        'Yes': {\n          es: 'Sí',\n          fr: 'Oui',\n          de: 'Ja',\n          it: 'Sì',\n          pt: 'Sim',\n          ru: 'Да',\n          ja: 'はい',\n          ko: '예',\n          zh: '은'\n        },\n        'No': {\n          es: 'No',\n          fr: 'Non',\n          de: 'Nein',\n          it: 'No',\n          pt: 'Não',\n          ru: 'Нет',\n          ja: 'いいえ',\n          ko: '아니요',\n          zh: '아니요'\n        },\n        'I love learning languages': {\n          es: 'Me encanta aprender idiomas',\n          fr: 'J\\'adore apprendre les langues',\n          de: 'Ich liebe es, Sprachen zu lernen',\n          it: 'Mi piace imparare le lingue',\n          pt: 'Eu amo aprender idiomas',\n          ru: 'Я люблю изучать языки',\n          ja: '私は言語学習が大好きです',\n          ko: '나는 언어 학습을 사랑해요',\n          zh: '나는 언어 학습을 사랑해요'\n        },\n        'How do you say this in Spanish?': {\n          es: '¿Cómo se dice esto en español?',\n          fr: 'Comment dit-on cela en espagnol?',\n          de: 'Wie sagt man das auf Spanisch?',\n          it: 'Come si dice questo in spagnolo?',\n          pt: 'Como se diz isso em espanhol?',\n          ru: 'Как это сказать по-испански?',\n          ja: 'これはスペイン語で何と言いますか？',\n          ko: '이것을 스페인어로 어떻게 말합니까?',\n          zh: '이것을 스페인어로 어떻게 말합니까?'\n        }\n      };\n\n      // Normalize input text for better matching\n      const normalizedInput = inputText.trim();\n      \n      // If we have a predefined translation, use it\n      if (translations[normalizedInput] && translations[normalizedInput][targetLanguage]) {\n        setTranslatedText(translations[normalizedInput][targetLanguage]);\n      } else {\n        // For text not in our predefined list, create a more realistic simulation\n        // Check for partial matches with common phrases\n        let foundMatch = false;\n        \n        // Check for partial matches\n        for (const [key, value] of Object.entries(translations)) {\n          if (normalizedInput.toLowerCase().includes(key.toLowerCase()) || \n              key.toLowerCase().includes(normalizedInput.toLowerCase())) {\n            if (value[targetLanguage]) {\n              setTranslatedText(value[targetLanguage]);\n              foundMatch = true;\n              break;\n            }\n          }\n        }\n        \n        // If no partial match found, provide a more realistic fallback\n        if (!foundMatch) {\n          const languageNames: Record<string, string> = {\n            es: 'Spanish',\n            fr: 'French',\n            de: 'German',\n            it: 'Italian',\n            pt: 'Portuguese',\n            ru: 'Russian',\n            ja: 'Japanese',\n            ko: 'Korean',\n            zh: 'Chinese'\n          };\n          \n          // Create a more natural translation simulation\n          const commonGreetings = ['hello', 'hi', 'good morning', 'good evening'];\n          const commonQuestions = ['how are you', 'how are'];\n          \n          let translatedPhrase = normalizedInput;\n          \n          // Handle common greetings\n          if (commonGreetings.some(greeting => normalizedInput.toLowerCase().includes(greeting))) {\n            const greetingsMap: Record<string, Record<string, string>> = {\n              hello: {\n                es: 'Hola',\n                fr: 'Bonjour',\n                de: 'Hallo',\n                it: 'Ciao',\n                pt: 'Olá',\n                ru: 'Привет',\n                ja: 'こんにちは',\n                ko: '안녕하세요',\n                zh: '你好'\n              }\n            };\n            \n            for (const greeting of commonGreetings) {\n              if (normalizedInput.toLowerCase().includes(greeting)) {\n                if (greetingsMap[greeting] && greetingsMap[greeting][targetLanguage]) {\n                  translatedPhrase = greetingsMap[greeting][targetLanguage];\n                  break;\n                }\n              }\n            }\n          }\n          \n          // Handle common questions\n          for (const question of commonQuestions) {\n            if (normalizedInput.toLowerCase().includes(question)) {\n              const questionsMap: Record<string, Record<string, string>> = {\n                'how are you': {\n                  es: '¿cómo estás?',\n                  fr: 'comment allez-vous?',\n                  de: 'wie geht es dir?',\n                  it: 'come stai?',\n                  pt: 'como você está?',\n                  ru: 'как ты?',\n                  ja: '元気ですか？',\n                  ko: '어떻게 지내세요?',\n                  zh: '你好吗？'\n                },\n                'how are': {\n                  es: '¿cómo estás?',\n                  fr: 'comment allez-vous?',\n                  de: 'wie geht es dir?',\n                  it: 'come stai?',\n                  pt: 'como você está?',\n                  ru: 'как ты?',\n                  ja: '원기ですか？',\n                  ko: '어떻게 지내세요?',\n                  zh: '你好吗？'\n                }\n              };\n              \n              if (questionsMap[question] && questionsMap[question][targetLanguage]) {\n                translatedPhrase = `${translatedPhrase} ${questionsMap[question][targetLanguage]}`;\n                break;\n              }\n            }\n          }\n          \n          setTranslatedText(translatedPhrase);\n        }\n      }\n      \n      setIsTranslating(false);\n    }, 800);\n  };\n\n  // Add function to reset audio\n  const resetAudio = () => {\n    if ('speechSynthesis' in window) {\n      window.speechSynthesis.cancel();\n    }\n    setIsPlaying(false);\n    setAudioProgress(0);\n  };\n\n  const handleJoinEvent = (eventId: number, eventTitle: string) => {\n    navigate(`/event/${eventId}`);\n  };\n\n  return (\n    <div className=\"dashboard-page\">\n      <div className=\"container\">\n        {/* Page Header */}\n        <div className=\"page-header\">\n          <div className=\"page-header-content\">\n            <h1 className=\"page-title\">{t('pages.headings.dashboard')}</h1>\n            <p className=\"page-subtitle\">{t('pages.descriptions.dashboard')}</p>\n          </div>\n          <div className=\"page-header-actions\">\n            <button className=\"btn btn-outline\">\n              <Settings size={16} />\n              {t('ui.navigation.settings')}\n            </button>\n          </div>\n        </div>\n\n        {/* Performance Metrics */}\n        <section className=\"performance-metrics-section\">\n          <div className=\"performance-metrics-grid grid grid-6\">\n            {performanceMetrics.map((metric, index) => (\n              <div key={index} className=\"metric-card card\">\n                <div className=\"card-content\">\n                  <div className=\"metric-header\">\n                    <div className=\"metric-icon\">\n                      {metric.icon}\n                    </div>\n                    <span className=\"metric-label\">{metric.label}</span>\n                  </div>\n                  <div className=\"metric-value\">{metric.value}</div>\n                  <div className={`metric-change ${metric.trend === 'up' ? 'positive' : 'negative'}`}>\n                    {metric.trend === 'up' ? <TrendingUp size={14} /> : <TrendingUp size={14} style={{ transform: 'rotate(180deg)' }} />}\n                    {metric.change}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </section>\n\n        {/* Quick Actions */}\n        <section className=\"quick-actions-section\">\n          <div className=\"section-header\">\n            <h2 className=\"section-title\">Quick Actions</h2>\n            <p className=\"section-description\">Get started with these helpful actions</p>\n          </div>\n          <div className=\"quick-actions-grid grid grid-6\">\n            {quickActions.map((action, index) => (\n              <div \n                key={index} \n                className=\"quick-action-card card\"\n                onClick={action.action}\n                style={{ cursor: 'pointer' }}\n              >\n                <div className=\"card-content\">\n                  <div className=\"quick-action-icon\">\n                    {action.icon}\n                  </div>\n                  <div className=\"quick-action-label\">{action.label}</div>\n                  <ChevronRight size={16} className=\"quick-action-arrow\" />\n                </div>\n              </div>\n            ))}\n          </div>\n        </section>\n\n        {/* Stats Overview */}\n        <section className=\"stats-overview\">\n          <div className=\"section-header\">\n            <h2 className=\"section-title\">Your Statistics</h2>\n            <p className=\"section-description\">Track your progress and achievements</p>\n          </div>\n          <div className=\"stats-grid grid grid-6\">\n            <div className=\"stat-card card\">\n              <div className=\"card-content\">\n                <div className=\"stat-header\">\n                  <MessageCircle className=\"stat-icon\" size={24} />\n                  <span className=\"stat-label\">{t('messages.info.welcome')}</span>\n                </div>\n                <div className=\"stat-value\">{formatNumber(userStats.messagesTranslated)}</div>\n                <div className=\"stat-change positive\">\n                  <TrendingUp size={14} />\n                  +12% {t('time.weekAgo')}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"stat-card card\">\n              <div className=\"card-content\">\n                <div className=\"stat-header\">\n                  <Globe className=\"stat-icon\" size={24} />\n                  <span className=\"stat-label\">Languages Used</span>\n                </div>\n                <div className=\"stat-value\">{userStats.languagesUsed}</div>\n                <div className=\"stat-change positive\">\n                  <TrendingUp size={14} />\n                  +2 {t('time.monthAgo')}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"stat-card card\">\n              <div className=\"card-content\">\n                <div className=\"stat-header\">\n                  <MessageCircle className=\"stat-icon\" size={24} />\n                  <span className=\"stat-label\">Conversations</span>\n                </div>\n                <div className=\"stat-value\">{formatNumber(userStats.conversationsStarted)}</div>\n                <div className=\"stat-change positive\">\n                  <TrendingUp size={14} />\n                  +8% {t('time.weekAgo')}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"stat-card card\">\n              <div className=\"card-content\">\n                <div className=\"stat-header\">\n                  <Users className=\"stat-icon\" size={24} />\n                  <span className=\"stat-label\">Friends</span>\n                </div>\n                <div className=\"stat-value\">{userStats.friendsConnected}</div>\n                <div className=\"stat-change positive\">\n                  <TrendingUp size={14} />\n                  +5 {t('time.weekAgo')}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"stat-card card\">\n              <div className=\"card-content\">\n                <div className=\"stat-header\">\n                  <CalendarDays className=\"stat-icon\" size={24} />\n                  <span className=\"stat-label\">Current Streak</span>\n                </div>\n                <div className=\"stat-value\">{userStats.streak} days</div>\n                <div className=\"stat-change positive\">\n                  <TrendingUp size={14} />\n                  +1 {t('time.dayAgo')}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"stat-card card\">\n              <div className=\"card-content\">\n                <div className=\"stat-header\">\n                  <CheckCircle className=\"stat-icon\" size={24} />\n                  <span className=\"stat-label\">Accuracy</span>\n                </div>\n                <div className=\"stat-value\">{userStats.accuracy}%</div>\n                <div className=\"stat-change positive\">\n                  <TrendingUp size={14} />\n                  +1% {t('time.weekAgo')}\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Charts Section */}\n        <section className=\"charts-section\">\n          <div className=\"section-header\">\n            <h2 className=\"section-title\">Activity Overview</h2>\n            <p className=\"section-description\">Your language learning progress over time</p>\n          </div>\n          <div className=\"charts-grid grid grid-2\">\n            {/* Weekly Activity Chart */}\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h2 className=\"card-title\">Weekly Activity</h2>\n                <select \n                  value={selectedPeriod}\n                  onChange={(e) => setSelectedPeriod(e.target.value)}\n                  className=\"period-selector\"\n                  aria-label=\"Select time period\"\n                >\n                  <option value=\"week\">{t('time.weekAgo')}</option>\n                  <option value=\"month\">{t('time.monthAgo')}</option>\n                  <option value=\"year\">{t('time.yearAgo')}</option>\n                </select>\n              </div>\n              <div className=\"card-content\">\n                <div className=\"chart-container\">\n                  <div className=\"chart-legend\">\n                    <div className=\"legend-item\">\n                      <div className=\"legend-color messages\"></div>\n                      <span>Messages</span>\n                    </div>\n                    <div className=\"legend-item\">\n                      <div className=\"legend-color translations\"></div>\n                      <span>Translations</span>\n                    </div>\n                  </div>\n                  <div className=\"bar-chart\">\n                    {weeklyActivityData.map((data, index) => (\n                      <div key={index} className=\"bar-group\">\n                        <div className=\"bar-container\">\n                          <div \n                            className=\"bar messages-bar\" \n                            style={{ height: `${(data.messages / 80) * 100}%` }}\n                          ></div>\n                          <div \n                            className=\"bar translations-bar\" \n                            style={{ height: `${(data.translations / 80) * 100}%` }}\n                          ></div>\n                        </div>\n                        <span className=\"bar-label\">{data.day}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Language Distribution Chart */}\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h2 className=\"card-title\">Language Distribution</h2>\n              </div>\n              <div className=\"card-content\">\n                <div className=\"chart-container\">\n                  <div className=\"pie-chart\">\n                    <div className=\"pie-chart-inner\">\n                      {languageDistributionData.map((data, index) => (\n                        <div \n                          key={index} \n                          className=\"pie-segment\"\n                          style={{ \n                            '--start': `${index * (360 / languageDistributionData.length)}deg`,\n                            '--end': `${(index + 1) * (360 / languageDistributionData.length)}deg`,\n                            '--color': `hsl(${index * 60}, 70%, 50%)`\n                          } as React.CSSProperties}\n                        >\n                          <span className=\"pie-label\">{data.percentage}%</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                  <div className=\"chart-legend vertical\">\n                    {languageDistributionData.map((data, index) => (\n                      <div key={index} className=\"legend-item\">\n                        <div \n                          className=\"legend-color\" \n                          style={{ backgroundColor: `hsl(${index * 60}, 70%, 50%)` }}\n                        ></div>\n                        <div className=\"legend-text\">\n                          <span className=\"legend-language\">{data.language}</span>\n                          <span className=\"legend-percentage\">{data.percentage}%</span>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Main Content Grid */}\n        <div className=\"dashboard-grid\">\n          {/* Recent Activity */}\n          <section className=\"recent-activity\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h2 className=\"card-title\">Recent Activity</h2>\n                <select \n                  value={selectedPeriod}\n                  onChange={(e) => setSelectedPeriod(e.target.value)}\n                  className=\"period-selector\"\n                  aria-label=\"Select time period\"\n                >\n                  <option value=\"day\">{t('time.dayAgo')}</option>\n                  <option value=\"week\">{t('time.weekAgo')}</option>\n                  <option value=\"month\">{t('time.monthAgo')}</option>\n                </select>\n              </div>\n              <div className=\"card-content\">\n                <div className=\"activity-list\">\n                  {recentActivity.map((activity) => (\n                    <div \n                      key={activity.id} \n                      className={`activity-item ${getActivityStatusClass(activity.status)}`}\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => {\n                        // Handle activity click based on type\n                        switch(activity.type) {\n                          case 'translation':\n                            // Navigate to translation history\n                            break;\n                          case 'conversation':\n                            // Navigate to conversation\n                            break;\n                          case 'friend':\n                            // Navigate to friend profile\n                            break;\n                          case 'achievement':\n                            // Navigate to achievements\n                            break;\n                          case 'practice':\n                            // Navigate to practice session\n                            break;\n                          default:\n                            break;\n                        }\n                      }}\n                    >\n                      <div className=\"activity-icon\">\n                        {getActivityIcon(activity.type, activity.status)}\n                      </div>\n                      <div className=\"activity-content\">\n                        <p className=\"activity-message\">{activity.message}</p>\n                        <span className=\"activity-time\">\n                          {formatRelativeTime(activity.timestamp)}\n                        </span>\n                      </div>\n                      {activity.language && (\n                        <span className=\"activity-language\">\n                          {activity.language.toUpperCase()}\n                        </span>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </section>\n\n          {/* Language Progress */}\n          <section className=\"language-progress\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h2 className=\"card-title\">Language Progress</h2>\n              </div>\n              <div className=\"card-content\">\n                <div className=\"progress-list\">\n                  {languageProgress.map((lang, index) => (\n                    <div \n                      key={index} \n                      className=\"progress-item\"\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => {\n                        // Navigate to language practice page\n                        navigate(`/practice/${lang.code}`);\n                      }}\n                    >\n                      <div className=\"progress-header\">\n                        <span className=\"progress-language\">{lang.language}</span>\n                        <span className=\"progress-level\">{lang.level}</span>\n                      </div>\n                      <div className=\"progress-bar\">\n                        <div \n                          className=\"progress-fill\"\n                          style={{ width: `${lang.progress}%` }}\n                        />\n                      </div>\n                      <div className=\"progress-footer\">\n                        <span className=\"progress-percentage\">{lang.progress}%</span>\n                        <span className=\"progress-next\">Next: {lang.nextMilestone}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </section>\n\n          {/* Upcoming Events */}\n          <section className=\"upcoming-events\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h2 className=\"card-title\">Upcoming Events</h2>\n              </div>\n              <div className=\"card-content\">\n                {upcomingEvents.length > 0 ? (\n                  <div className=\"events-list\">\n                    {upcomingEvents.map((event) => (\n                      <div \n                        key={event.id} \n                        className=\"event-item\"\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => handleJoinEvent(event.id, event.title)}\n                      >\n                        <div className=\"event-date\">\n                          <Calendar size={16} />\n                          {formatDate(event.date, { \n                            month: 'short', \n                            day: 'numeric',\n                            hour: '2-digit',\n                            minute: '2-digit'\n                          })}\n                        </div>\n                        <div className=\"event-content\">\n                          <h3 className=\"event-title\">{event.title}</h3>\n                          <p className=\"event-participants\">\n                            <Users size={14} />\n                            {event.participants} participants\n                          </p>\n                        </div>\n                        <div className=\"event-actions\">\n                          <span className=\"event-language\">\n                            {event.language.toUpperCase()}\n                          </span>\n                          <button className=\"btn btn-primary btn-sm\" onClick={(e) => {\n                            e.stopPropagation();\n                            handleJoinEvent(event.id, event.title);\n                          }}>\n                            Join\n                          </button>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <div className=\"empty-state\">\n                    <Calendar size={48} />\n                    <p>{t('ui.labels.noData')}</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          </section>\n\n          {/* Audio Practice */}\n          <section className=\"audio-practice\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                <h2 className=\"card-title\">Pronunciation Practice</h2>\n              </div>\n              <div className=\"card-content\">\n                <div className=\"audio-practice-content\">\n                  {/* Translation Input Section */}\n                  <div className=\"translation-section\">\n                    <div className=\"form-group\">\n                      <label className=\"form-label\">Enter Text to Translate</label>\n                      <textarea\n                        className=\"form-input\"\n                        value={inputText}\n                        onChange={(e) => setInputText(e.target.value)}\n                        placeholder=\"Type or paste text here...\"\n                        rows={3}\n                      />\n                    </div>\n                    \n                    <div className=\"translation-controls\">\n                      <div className=\"form-group\">\n                        <label className=\"form-label\">Select Language</label>\n                        <select\n                          className=\"form-select\"\n                          value={targetLanguage}\n                          onChange={(e) => setTargetLanguage(e.target.value)}\n                        >\n                          <option value=\"es\">Spanish</option>\n                          <option value=\"fr\">French</option>\n                          <option value=\"de\">German</option>\n                          <option value=\"it\">Italian</option>\n                          <option value=\"pt\">Portuguese</option>\n                          <option value=\"ru\">Russian</option>\n                          <option value=\"ja\">Japanese</option>\n                          <option value=\"ko\">Korean</option>\n                          <option value=\"zh\">Chinese</option>\n                        </select>\n                      </div>\n                      \n                      <button\n                        className=\"btn btn-primary\"\n                        onClick={handleTranslate}\n                        disabled={isTranslating}\n                      >\n                        {isTranslating ? (\n                          <>\n                            <span className=\"loading-spinner\"></span>\n                            Translating...\n                          </>\n                        ) : (\n                          'Translate'\n                        )}\n                      </button>\n                    </div>\n                    \n                    {translatedText && (\n                      <div className=\"translation-result\">\n                        <div className=\"result-header\">\n                          <span>Translation Result</span>\n                        </div>\n                        <div className=\"result-content\">\n                          <p className=\"translated-text\">{translatedText}</p>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                  \n                  {/* Audio Visualizer */}\n                  <div className=\"audio-visualizer\">\n                    {[...Array(20)].map((_, i) => (\n                      <div \n                        key={i} \n                        className=\"bar\"\n                        style={{ \n                          height: `${Math.random() * 60 + 10}%`,\n                          animationDelay: `${i * 0.1}s`,\n                          backgroundColor: isPlaying ? `hsl(${i * 18}, 70%, 50%)` : undefined\n                        }}\n                      ></div>\n                    ))}\n                  </div>\n                  \n                  {/* Audio Controls */}\n                  <div className=\"audio-controls\">\n                    <div className=\"audio-buttons\">\n                      <button \n                        className=\"audio-play-btn\"\n                        onClick={toggleAudioPlayback}\n                        disabled={!translatedText}\n                      >\n                        {isPlaying ? <Pause size={24} /> : <Play size={24} />}\n                      </button>\n                      {(audioProgress > 0 || isPlaying) && (\n                        <button \n                          className=\"btn btn-outline\"\n                          onClick={resetAudio}\n                        >\n                          Reset\n                        </button>\n                      )}\n                    </div>\n                    <div className=\"audio-progress\">\n                      <div className=\"audio-progress-bar\">\n                        <div className=\"audio-progress-fill\" style={{ width: `${audioProgress}%` }}></div>\n                      </div>\n                      <div className=\"audio-time\">\n                        <span>{Math.floor(audioProgress * 2.5 / 60)}:{String(Math.floor(audioProgress * 2.5 % 60)).padStart(2, '0')}</span>\n                        <span>4:10</span>\n                      </div>\n                    </div>\n                    <div className=\"audio-text\">\n                      <p className=\"audio-sentence\">{inputText}</p>\n                      <p className=\"audio-translation\">{translatedText}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"names":["AlertCircle","createLucideIcon","BarChart3","CalendarDays","ChevronRight","Trophy","UserCheck","XCircle","weeklyActivityData","languageDistributionData","Dashboard","useTranslation","navigate","useNavigate","selectedPeriod","setSelectedPeriod","useState","isPlaying","setIsPlaying","audioProgress","setAudioProgress","inputText","setInputText","targetLanguage","setTargetLanguage","translatedText","setTranslatedText","isTranslating","setIsTranslating","userStats","recentActivity","upcomingEvents","languageProgress","quickActions","jsx","MessageCircle","BookOpen","Users","Target","Mic","Volume2","performanceMetrics","Languages","Globe","getActivityIcon","type","status","iconProps","Star","Clock","getActivityStatusClass","toggleAudioPlayback","utterance","languageMap","interval","prev","handleTranslate","translations","normalizedInput","foundMatch","key","value","commonGreetings","commonQuestions","translatedPhrase","greeting","greetingsMap","question","questionsMap","resetAudio","handleJoinEvent","eventId","eventTitle","jsxs","Settings","metric","index","TrendingUp","action","formatNumber","CheckCircle","e","data","activity","formatRelativeTime","lang","event","Calendar","formatDate","Fragment","_","i","Pause","Play"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}